@inject IAuthenticationService _authService


<div class="modal fade show" id="ModalRegister" style="display:block;border-color:dimgray" role="dialog" aria-modal="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <EditForm Model="SignUpRequest" OnValidSubmit="RegisterUser">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Register</h5>
                    <button type="button" @onclick="@ModalCancel" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @if (ShowRegistrationErrors)
                    {
                        <div>
                            @foreach (var error in Errors)
                            {
                                <p class="text-danger text-center">@error</p>
                            }
                        </div>
                    }

                    <div class="py-2">
                        <InputText @bind-Value="SignUpRequest.Email" class="form-control" placeholder="Email..." />
                        <ValidationMessage For="(() => SignUpRequest.Email)" />
                    </div>
                    <div class="py-2 input-group">
                        <InputText @bind-Value="SignUpRequest.PhoneNumber" class="form-control" placeholder="Phone number..." />
                        <ValidationMessage For="(() => SignUpRequest.PhoneNumber)" />
                    </div>
                    <div class="form-row py-2">
                        <div class="col">
                            <InputText @bind-Value="SignUpRequest.Password" type="password" placeholder="Password..." class="form-control" />
                            <ValidationMessage For="(() => SignUpRequest.Password)" />
                        </div>
                        <div class="col py-2">
                            <InputText @bind-Value="SignUpRequest.ConfirmPassword" type="password" class="form-control" placeholder="Confirm Password..." />
                            <ValidationMessage For="(() => SignUpRequest.ConfirmPassword)" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @if (IsProcessing)
                    {
                        <NavLink class="btn btn-secondary" disabled>Close</NavLink>
                        <button type="submit" class="btn btn-primary" disabled>Register</button>
                    }
                    else
                    {
                        <NavLink class="btn btn-secondary" @onclick="@ModalCancel">Close</NavLink>
                        <button type="submit" class="btn btn-primary">Register</button>
                    }
                </div>
            </EditForm>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    private SignUpRequestDTO SignUpRequest { get; set; } = new();
    public bool IsProcessing { get; set; } = false;
    public bool ShowRegistrationErrors { get; set; }
    public IEnumerable<string> Errors { get; set; }

    private async Task RegisterUser()
    {
        ShowRegistrationErrors = false;
        IsProcessing = true;
        var result = await _authService.RegisterUser(SignUpRequest);
        if (result.IsRegistrationSuccessful)
        {
            //registration is successful
            await ModalOk();
        }
        else
        {
            //failure
            Errors = result.Errors;
            ShowRegistrationErrors = true;
        }
        IsProcessing = false;
    }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }
    
    private Task ModalOk()
    {
        return OnClose.InvokeAsync(true);
    }
}
